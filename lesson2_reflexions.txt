What happens when you initialize a repository? Why do you need to do it?
	It begins to track the files in the repository so I can use Git. 
How is the staging area different from the working directory and the repository? 
What value do you think it offers?
	it prepares the files to be commited. ?
How can you use the staging area to make sure you have one commit per logical change?
	I can add the changes to the staging area and wait before commit them in order to 
	secure that all the changes are grouped together. 
What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?
	If i would like to make an alternative version of my project or experiment without losing
	the original functioning version. 
How do the diagrams help you visualize the branch structure?
	It helps keeping track of the various branches and recent commits. I can easily find all the 
	commits made and which commit relates to what branch. 
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	The new node results from the two branches usually master and the other one and we can successfully
	combine all the commites made to both branches. We represent it with arrows pointing to both parents
	to illustrate this dependence on both branches. 
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
it is too complicated to merge all the changes manually! So non-conflicting changes are automatically merged 
which saves a lot of time! and then any conflicting changes are resolved manually to secure that the writer
can choose the best possible change or the desired change for the project. 